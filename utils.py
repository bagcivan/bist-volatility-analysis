import functools

# Ã–nbelleÄŸe alma dekoratÃ¶rÃ¼
def memoize(func):
    """Fonksiyon sonuÃ§larÄ±nÄ± Ã¶nbelleÄŸe alÄ±r
    
    Fonksiyon sonuÃ§larÄ±nÄ± tekrar hesaplamamak iÃ§in bir Ã¶nbellek mekanizmasÄ± saÄŸlar.
    AynÄ± parametrelerle tekrar Ã§aÄŸrÄ±ldÄ±ÄŸÄ±nda, hesaplama yapmak yerine Ã¶nbellekteki sonucu dÃ¶ndÃ¼rÃ¼r.
    
    Args:
        func: Ã–nbelleÄŸe alÄ±nacak fonksiyon
        
    Returns:
        Ã–nbelleÄŸe alÄ±nmÄ±ÅŸ fonksiyon
    """
    cache = {}
    
    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        # Her parametre dÃ¶nÃ¼ÅŸtÃ¼rÃ¼lebilir olmalÄ±
        key = str(args) + str(sorted(kwargs.items()))
        if key not in cache:
            cache[key] = func(*args, **kwargs)
        return cache[key]
    
    return wrapper

def extract_page_title(page_name):
    """Sayfa adÄ±ndan emoji'yi kaldÄ±rarak baÅŸlÄ±ÄŸÄ± Ã§Ä±karÄ±r
    
    Args:
        page_name: Emoji iÃ§erebilen sayfa adÄ± (Ã¶rn. "ğŸ“Š Piyasa Ã–zeti")
        
    Returns:
        Emoji'siz sayfa baÅŸlÄ±ÄŸÄ± (Ã¶rn. "Piyasa Ã–zeti")
    """
    return page_name.split(" ", 1)[1] if " " in page_name else page_name

